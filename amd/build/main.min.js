define("block_tasklist/main",["exports","core/templates","core/pending","core/ajax"],(function(_exports,_templates,_pending,_ajax){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
/**
   * @module      block_tasklist/main
   * @copyright   2022 University of Canterbury
   * @license     https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_templates=_interopRequireDefault(_templates),_pending=_interopRequireDefault(_pending),_ajax=_interopRequireDefault(_ajax);const ACTIVE_LISTS=[];let CURRENT_ITEM=null;_exports.init=blockid=>{let instanceid=document.querySelector(blockid).dataset.instanceid;ACTIVE_LISTS[blockid]=instanceid,fetchList(instanceid),document.querySelector('div[data-instanceid="'+instanceid+'"] .block-tasklist-input-button').addEventListener("click",addItem),document.querySelector('div[data-instanceid="'+instanceid+'"] #block-tasklist-input-'+instanceid).addEventListener("keydown",(e=>{"Enter"===e.code&&addItem(e)})),document.querySelector('div[data-instanceid="'+instanceid+'"] ul.block-tasklist-list').addEventListener("dragover",(event=>{event.preventDefault()}))};const addItem=clickEvent=>{let instanceid=clickEvent.target.closest(".block-tasklist").dataset.instanceid,name=document.querySelector('div[data-instanceid="'+instanceid+'"] input.block-tasklist-input'),list=document.querySelector('div[data-instanceid="'+instanceid+'"] ul.block-tasklist-list');""!==name.value&&(_ajax.default.call([{methodname:"block_tasklist_add_item",args:{instanceid:instanceid,name:name.value,complete:!1,position:list.childElementCount}}])[0].then(renderItem).fail(Notification.exception),name.value="")},fetchList=async instanceid=>_ajax.default.call([{methodname:"block_tasklist_get_items",args:{instanceid:instanceid}}])[0].then((items=>(items.length||(document.getElementById("block-tasklist-no-items-"+instanceid).style.display="block"),items))).then(addItems).fail(Notification.exception),addItems=items=>{if(!items.length)return Promise.resolve();const pendingPromise=new _pending.default("blocks/tasklist:addItems");return items.forEach((item=>renderItem(item))),pendingPromise.resolve()},renderItem=itemData=>{_templates.default.render("block_tasklist/task_item",itemData).done((function(html){let list=document.querySelector('div[data-instanceid="'+itemData.instanceid+'"] ul.block-tasklist-list');list.insertAdjacentHTML("beforeend",html),1===list.childElementCount&&(document.getElementById("block-tasklist-no-items-"+itemData.instanceid).style.display="none");let item=document.querySelector('li[data-itemid="'+itemData.id+'"]');addCompleteItemEvents(item),addItemDragDrop(item),addItemEditEvent(item),addDeleteEvent(item)})).fail(Notification.exception)},addItemEditEvent=item=>{let itemname=item.querySelector("label.block-tasklist-itemname"),input=item.querySelector("input.block-tasklist-item-edit-input");item.querySelector("button.block-tasklist-item-edit").addEventListener("click",(()=>{if("none"===itemname.style.display)updateItemName(item,itemname,input);else{itemname.style.display="none",input.style.display="inline-block",item.draggable=!1,input.focus();let value=input.value;input.value="",input.value=value}})),item.querySelector("input.block-tasklist-item-edit-input").addEventListener("keydown",(e=>{"Enter"===e.code&&updateItemName(item,itemname,input)}))},updateItemName=(item,itemname,input)=>{item.draggable=!0,itemname.innerText=input.value,itemname.style.display="inline-block",input.style.display="none";let itemData={id:parseInt(item.dataset.itemid),name:item.querySelector("label.block-tasklist-itemname").innerText,position:parseInt(item.dataset.position),complete:item.classList.contains("block-tasklist-item-complete")};updateItems(parseInt(item.dataset.instanceid),[itemData])},addCompleteItemEvents=item=>{item.querySelector("button.block-tasklist-item-complete").addEventListener("click",(()=>{let itemData={id:parseInt(item.dataset.itemid),name:item.querySelector("label.block-tasklist-itemname").innerText,position:parseInt(item.dataset.position)};item.classList.contains("block-tasklist-item-complete")?(item.classList.remove("block-tasklist-item-complete"),itemData.complete=!1):(item.classList.add("block-tasklist-item-complete"),itemData.complete=!0),updateItems(parseInt(item.dataset.instanceid),[itemData])}))},addDeleteEvent=item=>{item.querySelector(".block-tasklist-item-delete").addEventListener("click",(()=>{item.remove(),deleteItem(item.dataset.instanceid,item.dataset.itemid),recalculatePositions(item.dataset.instanceid),0===document.querySelector('div[data-instanceid="'+item.dataset.instanceid+'"] ul.block-tasklist-list').childElementCount&&(document.getElementById("block-tasklist-no-items-"+item.dataset.instanceid).style.display="block")}))},addItemDragDrop=item=>{item.addEventListener("dragstart",(()=>{CURRENT_ITEM=item})),item.addEventListener("drop",(event=>{if(event.preventDefault(),item!==CURRENT_ITEM){let currentPos=0,droppedPos=0,children=item.parentElement.children;for(let i=0;i<children.length;i++)CURRENT_ITEM===children[i]&&(currentPos=i),item===children[i]&&(droppedPos=i);currentPos<droppedPos?(item.parentNode.insertBefore(CURRENT_ITEM,item.nextSibling),recalculatePositions(parseInt(item.dataset.instanceid))):(item.parentNode.insertBefore(CURRENT_ITEM,item),recalculatePositions(parseInt(item.dataset.instanceid)))}}))},recalculatePositions=instanceid=>{let children=document.querySelector('div[data-instanceid="'+instanceid+'"] ul.block-tasklist-list').children,toUpdate=[];for(let i=0;i<children.length;i++){let item=children[i];if(item.dataset.position!=i){item.dataset.position=i;let itemData={id:parseInt(item.dataset.itemid),name:item.querySelector("label.block-tasklist-itemname").innerText,position:parseInt(item.dataset.position),complete:item.classList.contains("block-tasklist-item-complete")};toUpdate.push(itemData)}}updateItems(instanceid,toUpdate)},updateItems=(instanceid,items)=>{_ajax.default.call([{methodname:"block_tasklist_update_items",args:{instanceid:instanceid,items:items}}])[0].fail(Notification.exception)},deleteItem=(instanceid,itemid)=>{_ajax.default.call([{methodname:"block_tasklist_delete_item",args:{instanceid:instanceid,itemid:itemid}}])[0].fail(Notification.exception)}}));

//# sourceMappingURL=main.min.js.map